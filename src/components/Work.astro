---
type Image = {
  src: ImageMetadata;
  alt: string;
  title: string;
}

import dukiAlas from "../assets/tattoos/tattoo_1.jpeg"
import dukiDiablo from "../assets/tattoos/tattoo_7.jpeg"
import inicialA from "../assets/tattoos/tattoo_2.jpeg"
import ohana from "../assets/tattoos/tattoo_3.jpeg"
import batmanGuason from "../assets/tattoos/tattoo_4.jpeg"
import serpiente from "../assets/tattoos/tattoo_5.jpeg"
import selfCare from "../assets/tattoos/tattoo_6.jpeg"
import ramos from "../assets/tattoos/tattoo_8.jpeg"
import corazones from "../assets/tattoos/tattoo_9.jpeg"
import lPecho from "../assets/tattoos/tattoo_10.jpeg"
import luna from "../assets/tattoos/tattoo_11.jpeg"
import eyes from "../assets/tattoos/tattoo_12.jpeg"
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

const images: Image[] = [
  {
    src: dukiAlas,
    alt: "Alas de Duki",
    title: "Alas de Duki",
  },
  {
    src: batmanGuason,
    alt: "Batman x Guason",
    title: "Batman x Guason",
  },
  {
    src: inicialA,
    alt: "Inicial A",
    title: "Inicial A",
  },
  {
    src: dukiDiablo,
    alt: "Duki Diablo",
    title: "Duki Diablo",
  },
  {
    src: ohana,
    alt: "Ohana",
    title: "Ohana",
  },
  {
    src: serpiente,
    alt: "Serpiente en la espalda",
    title: "Serpiente en la espalda",
  },
  {
    src: selfCare,
    alt: "Self Care Tattoo",
    title: "Self Care Tattoo",
  },
  {
    src: ramos,
    alt: "Ramos",
    title: "Ramos",
  },
  {
    src: corazones,
    alt: "Corazónes en fila",
    title: "Corazónes en fila",
  },
  {
    src: lPecho,
    alt: "L en el pecho",
    title: "L en el pecho",
  },
  {
    src: luna,
    alt: "Luna",
    title: "Luna",
  }
];

// Función para dividir imágenes en columnas según el número especificado
function divideIntoColumns(images: Image[], columnCount: number) {
  const columns = Array.from({ length: columnCount }, () => []);
  images.forEach((image: Image, index: number) => {
    // @ts-ignore
    columns[index % columnCount].push(image);
  });
  return columns;
}

// Crear diferentes distribuciones para cada breakpoint
const mobileColumns = divideIntoColumns(images, 1);
const tabletColumns = divideIntoColumns(images, 2);
const desktopColumns = divideIntoColumns(images, 3);
---

<section class="p-4 max-w-7xl mx-auto">
  <div class="grid grid-cols-1 md:grid-cols-2 space-y-4 mb-8">
    <h2 class="text-4xl tracking-tight font-noto">Portafolio</h2>
    <p class="space-y-8 md:text-right">Este es mi arte, esta es la manera en la cual dejo marcado en la piel de mis clientes un recuerdo que esta en el alma.</p>
  </div>

  <!-- Grid para móvil (1 columna) -->
  <div class="pinterest-grid mobile-grid">
    {mobileColumns.map((column: Image[]) => (
      <div class="pinterest-column">
        {column.map((image: Image) => (
          <div class="pinterest-item grayscale hover:grayscale-0 transition duration-300 hover:scale-101" >
            <Image
              src={image.src}
              alt={image.alt}
              title={image.title}
              class="pinterest-image"
              loading="lazy"
            />
            <div class="pinterest-overlay">
              <h3 class="pinterest-title">{image.title}</h3>
            </div>
          </div>
        ))}
      </div>
    ))}
  </div>

  <!-- Grid para tablet (2 columnas) -->
  <div class="pinterest-grid tablet-grid">
    {tabletColumns.map((column: Image[]) => (
      <div class="pinterest-column">
        {column.map((image: Image) => (
          <div class="pinterest-item grayscale hover:grayscale-0 transition duration-300 hover:scale-101" >
            <Image
              src={image.src}
              alt={image.alt}
              title={image.title}
              class="pinterest-image"
              loading="lazy"
            />
            <div class="pinterest-overlay">
              <h3 class="pinterest-title">{image.title}</h3>
            </div>
          </div>
        ))}
      </div>
    ))}
  </div>

  <!-- Grid para desktop (3 columnas) -->
  <div class="pinterest-grid desktop-grid">
    {desktopColumns.map((column: Image[]) => (
      <div class="pinterest-column">
        {column.map((image: Image) => (
          <div class="pinterest-item grayscale hover:grayscale-0 transition duration-300 hover:scale-101" >
            <Image
              src={image.src}
              alt={image.alt}
              title={image.title}
              class="pinterest-image"
              loading="lazy"
            />
            <div class="pinterest-overlay">
              <h3 class="pinterest-title">{image.title}</h3>
            </div>
          </div>
        ))}
      </div>
    ))}
  </div>
</section>

<style>
  .pinterest-grid {
    display: grid;
    gap: 1rem;
  }

  /* Mostrar solo el grid móvil por defecto */
  .mobile-grid {
    display: grid;
    grid-template-columns: 1fr;
  }

  .tablet-grid,
  .desktop-grid {
    display: none;
  }

  /* Tablet: mostrar grid de 2 columnas */
  @media (min-width: 768px) {
    .mobile-grid {
      display: none;
    }
    
    .tablet-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
    }
    
    .desktop-grid {
      display: none;
    }
  }

  /* Desktop: mostrar grid de 3 columnas */
  @media (min-width: 1024px) {
    .mobile-grid,
    .tablet-grid {
      display: none;
    }
    
    .desktop-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .pinterest-column {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .pinterest-item {
    position: relative;
    overflow: hidden;
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }

  .pinterest-item:hover {
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
  }

  .pinterest-image {
    width: 100%;
    height: auto;
    object-fit: cover;
    border-radius: 0.5rem;
    transition: transform 0.3s ease;
  }

  .pinterest-item:hover .pinterest-image {
    transform: scale(1.05);
  }

  .pinterest-overlay {
    position: absolute;
    inset: 0;
    background: linear-gradient(to top, rgba(0, 0, 0, 0.7), transparent);
    opacity: 0;
    transition: opacity 0.3s ease;
    display: flex;
    align-items: flex-end;
    padding: 1rem;
    border-radius: 0.5rem;
  }

  .pinterest-item:hover .pinterest-overlay {
    opacity: 1;
  }

  .pinterest-title {
    color: white;
    font-weight: 600;
    font-size: 0.875rem;
    margin: 0;
  }
</style>
